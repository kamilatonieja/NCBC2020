
```cryptol
module labs::moje::moje where 

sayHi : {a} (fin a) => [a][8] -> [4+a][8]
sayHi name = hi 
    where 
        hi = "hi, " # name
```
```cryptol
repeat :
    {n, a}
    () =>
    a -> [n]a
repeat value = [ value | _ <- zero : [n] ]
```
```cryptol
zeroPrepend : 
  {n, m} 
  (fin n) => 
  [m] -> [n+m] 
zeroPrepend  input = repeat`{n=n} (False) # input
```

```cryptol
caesar msg = map rot3 msg
  where
    rot3 d =
      if 'A' <= d /\ d <= 'Z' then
        (['A'..'Z':Char] >>> 4) @ (d - 'A')
      else
        d

```

```cryptol
add x y = x*y
```



```cryptol
/** number of characters in alphabet */
type w = 26

/** an alphabet of characters included in a rotation cipher */
type Alphabet = String w

/** a left-rotation amount */
type Key = [width w]

/** alphabet of characters to "encrypt" */
alphabet = ['A'..'Z'] : Alphabet

index:
    {n, a} 
    (fin n, Eq a) =>
    [n]a -> a -> [1 + n]
index L x = if (or M) then (lg2 ((0b0 # M) + 1) - 1) else (length M)
  where
    M = (map ((==) x) L)

decrypt : {n} Key -> String n -> String n
decrypt key msg' = map rot msg'
  where
    /* cipher alphabet */
    alphabet' = alphabet >>> key

    rot c = if (i < length alphabet) then (alphabet ! i) else c
      where
        i = index alphabet' c
```
```cryptol
amult a b c = a*b + b*c
```
